// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot ListOfExpenseCategory 1`] = `
Array [
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "backgroundColor": "#fff",
        "borderBottomColor": "#808080",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 62,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "flex": 2,
          "paddingBottom": 7,
          "paddingLeft": 5,
        }
      }
    >
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <Text />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 8,
          "justifyContent": "center",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#35baf6",
            "fontSize": 34,
            "fontWeight": "bold",
            "marginBottom": 10,
          }
        }
      >
        Expense
      </Text>
    </View>
    <View
      style={
        Object {
          "flex": 2,
        }
      }
    />
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#fff",
        "borderRadius": 5,
        "elevation": 5,
        "flexDirection": "row",
        "height": 55,
        "margin": 5,
        "marginBottom": 10,
        "shadowColor": "#999",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.8,
        "shadowRadius": 2,
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "opacity": 1,
          "width": 380,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": 50,
          }
        }
      >
        <Text />
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#666",
              "fontSize": 18,
              "fontWeight": "bold",
            },
            Object {
              "color": "#FAB00E",
            },
          ]
        }
      >
        Add expense category
      </Text>
    </View>
  </View>,
  <View
    style={
      Object {
        "alignItems": "center",
        "paddingBottom": 6,
      }
    }
  >
    <Text
      style={
        Object {
          "fontStyle": "italic",
        }
      }
    >
      Swipe left to edit or delete the category
    </Text>
  </View>,
  <RCTScrollView
    closeOnRowBeginSwipe={false}
    closeOnRowOpen={true}
    closeOnRowPress={true}
    closeOnScroll={true}
    data={Array []}
    directionalDistanceChangeThreshold={2}
    disableHiddenLayoutCalculation={false}
    disableLeftSwipe={false}
    disableRightSwipe={true}
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    leftOpenValue={0}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    previewFirstRow={false}
    previewRepeat={false}
    previewRepeatDelay={1000}
    recalculateHiddenLayout={false}
    removeClippedSubviews={false}
    renderHiddenItem={[Function]}
    renderItem={[Function]}
    rightOpenValue={-150}
    scrollEventThrottle={50}
    showsVerticalScrollIndicator={true}
    stickyHeaderIndices={Array []}
    swipeToClosePercent={50}
    swipeToOpenPercent={50}
    swipeToOpenVelocityContribution={0}
    useAnimatedList={false}
    useNativeDriver={true}
    viewabilityConfigCallbackPairs={Array []}
  >
    <View />
  </RCTScrollView>,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    visible={false}
  />,
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    visible={false}
  />,
]
`;
